'use client';

import '@/lib/i18n';
import { useEffect, useState } from 'react';
import { useTranslation } from 'react-i18next';
import Link from 'next/link';
import i18nGlobal from '@/lib/i18n';

export default function PrivacyPage() {
  const { t, i18n: i18nCtx } = useTranslation('privacy');

    useEffect(() => {
    // –Ω–∞ –≤—Å—è–∫–∏–π —Å–Ω–∏–º–∞–µ–º –≤—Å—ë, —á—Ç–æ –º–æ–≥–ª–æ –∑–∞–ø—Ä–µ—Ç–∏—Ç—å –ø—Ä–æ–∫—Ä—É—Ç–∫—É –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –∫–∞—Ä—Ç—ã
    document.body.classList.remove('no-page-scroll');
    document.documentElement.style.overflow = '';
    document.body.style.overflow = '';
    }, []);

    // 1) –∂–¥—ë–º ¬´–≥–∏–¥—Ä–∞—Ç–∞—Ü–∏–∏¬ª –∏ –≤—ã—Å—Ç–∞–≤–ª—è–µ–º —è–∑—ã–∫ –¥–æ –ø–µ—Ä–≤–æ–π –æ—Ç—Ä–∏—Å–æ–≤–∫–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
    const [readyToRender, setReadyToRender] = useState(false);

    useEffect(() => {
        const saved =
        typeof window !== 'undefined' ? localStorage.getItem('lang') : null;

        // –µ—Å–ª–∏ –µ—Å—Ç—å —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–π ‚Äî –ø–µ—Ä–µ–∫–ª—é—á–∞–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–π i18n,
        // –∏–Ω–∞—á–µ –ø—Ä–æ—Å—Ç–æ –æ—Ç–º–µ—á–∞–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å
        const apply = async () => {
        try {
            if (saved && saved !== i18nCtx.language) {
            await i18nGlobal.changeLanguage(saved);
            }
        } finally {
            setReadyToRender(true);
        }
        };
        apply();
        // eslint-disable-next-line react-hooks/exhaustive-deps
    }, []);

    // 2) –ø–æ–∫–∞ —è–∑—ã–∫ ¬´—É—Å—Ç–∞–∫–∞–Ω–∏–≤–∞–µ—Ç—Å—è¬ª ‚Äî –Ω–∏—á–µ–≥–æ –Ω–µ —Ä–µ–Ω–¥–µ—Ä–∏–º (–∏–ª–∏ –º–æ–∂–Ω–æ –ø–æ–∫–∞–∑–∞—Ç—å —Å–∫–µ–ª–µ—Ç–æ–Ω)
    if (!readyToRender) {
        return (
        <main className="max-w-3xl mx-auto px-4 py-8">
            <div className="text-sm text-gray-600">Loading‚Ä¶</div>
        </main>
        );
    }

    // 3) —Ç–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –±–µ–∑–æ–ø–∞—Å–Ω–æ —Ä–∏—Å–æ–≤–∞—Ç—å –∫–æ–Ω—Ç–µ–Ω—Ç
    const raw = t('content', { returnObjects: true }) as unknown;
    const paragraphs: string[] = Array.isArray(raw)
        ? raw
        : typeof raw === 'string'
        ? [raw]
    : [];

    return (
        <div
            className="fixed inset-0 overflow-auto bg-white"
            style={{ WebkitOverflowScrolling: 'touch' }}
        >
            <main className="max-w-3xl mx-auto px-4 py-8 relative z-10">
                <div className="mb-4 flex gap-2 items-center">
                    <span>üåê</span>
                    <select
                    value={i18nCtx.language}
                    onChange={(e) => {
                        const lang = e.target.value;
                        i18nGlobal.changeLanguage(lang);
                        localStorage.setItem('lang', lang);
                    }}
                    className="border rounded px-2 py-1 text-sm"
                    >
                    <option value="en">English</option>
                    <option value="de">Deutsch</option>
                    <option value="fr">Fran√ßais</option>
                    <option value="it">Italiano</option>
                    <option value="ru">–†—É—Å—Å–∫–∏–π</option>
                    </select>

                    <Link href="/" className="ml-auto underline">
                    ‚Üê Back to map
                    </Link>
                </div>

                <h1 className="text-2xl font-bold mb-6">{t('title')}</h1>

                {paragraphs.map((p, i) => (
                    <p key={i} className="mb-4 whitespace-pre-wrap">
                    {p}
                    </p>
                ))}
            </main>
        </div>
    );
}
